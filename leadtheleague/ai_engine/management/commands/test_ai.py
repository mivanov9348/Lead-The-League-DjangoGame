from django.core.management import BaseCommand

from ai_engine.models import QTable
from teams.ai.state import TeamState


class Command(BaseCommand):
    help = "–¢–µ—Å—Ç–≤–∞ AI –ª–æ–≥–∏–∫–∞—Ç–∞"

    def handle(self, *args, **kwargs):
        self.stdout.write("üîÑ –ó–∞–ø–æ—á–≤–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ—Ç–æ –Ω–∞ AI...")

        for _ in range(100):
            TeamState.process_all_teams(season=1)

        learned_data = list(QTable.objects.all().values())
        if not learned_data:
            self.stdout.write("‚ö† AI –Ω–µ –µ –∑–∞–ø–∏—Å–∞–ª –Ω–∏—â–æ –≤ QTable!")
        else:
            self.stdout.write(f"‚úÖ AI –µ –∑–∞–ø–∏—Å–∞–ª {len(learned_data)} –∑–∞–ø–∏—Å–∞ –≤ QTable.")
            for record in learned_data[:10]:  # –ü–æ–∫–∞–∑–≤–∞–º–µ –ø—ä—Ä–≤–∏—Ç–µ 10 —Ä–µ–∑—É–ª—Ç–∞—Ç–∞
                self.stdout.write(str(record))

        self.stdout.write("üéØ –¢–µ—Å—Ç–≤–∞–Ω–µ—Ç–æ –ø—Ä–∏–∫–ª—é—á–∏.")
